{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import json\
import pandas as pd\
from sklearn.feature_extraction.text import TfidfVectorizer\
from sklearn.model_selection import train_test_split\
from sklearn.linear_model import LogisticRegression\
from sklearn.metrics import classification_report, confusion_matrix\
import matplotlib.pyplot as plt\
import seaborn as sns\
\
# Load dataset\
with open("sample_documents.json", "r") as f:\
    data = json.load(f)\
\
# Convert to DataFrame\
df = pd.DataFrame(data)\
df = df[["content", "author_type"]]\
df["label"] = df["author_type"].map(\{"AI": 1, "Human": 0\})\
\
# Feature extraction\
tfidf = TfidfVectorizer()\
X = tfidf.fit_transform(df["content"])\
y = df["label"]\
\
# Split data\
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\
\
# Train model\
model = LogisticRegression()\
model.fit(X_train, y_train)\
\
# Predict\
y_pred = model.predict(X_test)\
\
# Results\
print("\\nClassification Report:\\n")\
print(classification_report(y_test, y_pred))\
\
# Confusion Matrix\
cm = confusion_matrix(y_test, y_pred)\
sns.heatmap(cm, annot=True, cmap="Blues", xticklabels=["Human", "AI"], yticklabels=["Human", "AI"])\
plt.xlabel("Predicted")\
plt.ylabel("Actual")\
plt.title("Confusion Matrix: AI Content Detection")\
plt.show()\
}